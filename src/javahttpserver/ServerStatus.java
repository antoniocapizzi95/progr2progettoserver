/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javahttpserver;

import com.mysql.jdbc.Connection;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Antonio
 */
public class ServerStatus extends javax.swing.JFrame {

    /**
     * Creates new form ServerStatus
     */
    public ServerStatus() {
        initComponents();
        this.filesUploadedTxtArea.setText(this.getFilesUploaded());

        IOWithDB db = null;
        try {
            db = new IOWithDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        String titles = null;
        try {
            titles = db.showFilesOnDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dbStatusTxtArea.setText(titles);
        this.pathLabel.setText("Files directory: "+ImportTxt.directory);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        filesUploadedTxtArea = new javax.swing.JTextArea();
        refreshButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dbStatusTxtArea = new javax.swing.JTextArea();
        refreshButtonDB = new javax.swing.JButton();
        backupButton = new javax.swing.JButton();
        restoreButton = new javax.swing.JButton();
        removeFromDBButton = new javax.swing.JButton();
        toRemoveField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pathLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Files uploaded on server");

        filesUploadedTxtArea.setColumns(20);
        filesUploadedTxtArea.setRows(5);
        jScrollPane1.setViewportView(filesUploadedTxtArea);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("File on database");

        dbStatusTxtArea.setColumns(20);
        dbStatusTxtArea.setRows(5);
        jScrollPane2.setViewportView(dbStatusTxtArea);

        refreshButtonDB.setText("Refresh");
        refreshButtonDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonDBActionPerformed(evt);
            }
        });

        backupButton.setText("Backup");
        backupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupButtonActionPerformed(evt);
            }
        });

        restoreButton.setText("Restore");
        restoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreButtonActionPerformed(evt);
            }
        });

        removeFromDBButton.setText("Remove");
        removeFromDBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromDBButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Write the ID of the file to remove");

        pathLabel.setText("Path");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addComponent(refreshButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toRemoveField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(refreshButtonDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(restoreButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(removeFromDBButton)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(pathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(refreshButton)))
                .addGap(149, 149, 149)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshButtonDB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backupButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(restoreButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeFromDBButton)
                    .addComponent(toRemoveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(968, 968, 968))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getFilesUploaded() {
        String filesTitle = "";
        for (int i = 0; i < ImportTxt.list.size(); i++) {
            TextFile elem = (TextFile) ImportTxt.list.get(i);
            String indexString = Integer.toString(i + 1);
            filesTitle = filesTitle+"ID: "+ indexString + " - File Name: " + elem.title + "\n";

        }
        return filesTitle;
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        this.filesUploadedTxtArea.setText(this.getFilesUploaded());
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void backupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupButtonActionPerformed
        IOWithDB db = null;
        try {
            db = new IOWithDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < ImportTxt.list.size(); i++) {
            TextFile elem = (TextFile) ImportTxt.list.get(i);
            try {
                db.sendFileToDB(elem);
            } catch (SQLException ex) {
                Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.refreshDB();
    }//GEN-LAST:event_backupButtonActionPerformed

    private void refreshDB() {
        IOWithDB db = null;
        try {
            db = new IOWithDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        String titles = null;
        try {
            titles = db.showFilesOnDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dbStatusTxtArea.setText(titles);
    }
    
    private void refreshButtonDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonDBActionPerformed
        // TODO add your handling code here:
        this.refreshDB();
    }//GEN-LAST:event_refreshButtonDBActionPerformed

    private void restoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreButtonActionPerformed
        // TODO add your handling code here:
        
        IOWithDB db = null;
        try {
            db = new IOWithDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            db.restoreFilesFromDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.filesUploadedTxtArea.setText(this.getFilesUploaded());
    }//GEN-LAST:event_restoreButtonActionPerformed

    private void removeFromDBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromDBButtonActionPerformed
        // TODO add your handling code here:
        IOWithDB db = null;
        try {
            db = new IOWithDB();
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            db.removeFileFromDB(this.toRemoveField.getText());
        } catch (SQLException ex) {
            Logger.getLogger(ServerStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.refreshDB();
    }//GEN-LAST:event_removeFromDBButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupButton;
    private javax.swing.JTextArea dbStatusTxtArea;
    private javax.swing.JTextArea filesUploadedTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshButtonDB;
    private javax.swing.JButton removeFromDBButton;
    private javax.swing.JButton restoreButton;
    private javax.swing.JTextField toRemoveField;
    // End of variables declaration//GEN-END:variables
}
